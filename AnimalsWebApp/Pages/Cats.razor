@page "/cats"

@using AnimalShelter
@using AnimalShelterCore
@using AnimalsWebApp.Pages.Admin;
@using Plugins.DataAnimals.Sql.Repositories.Repositories
@using UseCases.DataAnimalsPluginInterfaces

@inject IAnimalRepository AnimalRepository
@inject ICategoryRepository CategoryRepository
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<PageTitle>Категория кошки</PageTitle> 
<div class="line"></div>    

@if(animals != null)
{   
    <div class="flexForImg">
         @foreach(var animal in animals)
            { 
                @if(animal.CategoryId == 1)
              {                                   
                   <div class="flexForImg2">

                    <img src="@animal.ImagePath" class="imgForAnimals" />
                        
                      <div class="containerForAnimalsDescription">
                       
                        <h4>Имя: @animal.Name</h4>
                        <h4>Возраст: @animal.Age</h4>
                        @if (animal.Gender == "Male")
                        {
                            <h4>Пол: Мужской</h4>
                        }
                        else if (animal.Gender == "Female")
                        {
                            <h4>Пол: Женский</h4>
                        }
                        @if (animal.IsVaccinated == true)
                        {
                            <h4 style="color:limegreen">Вакцинирован</h4>
                        }else{
                            <h4 style="color:red">Требуется вакцинация</h4>
                        }
                        <h4>ID: @animal.AnimalId</h4>

                        <div style="margin:10px 0 10px 0">
                            <button id="divId" class="btn btn-success center" @onclick="@(() => OnFindCurrentId(animal))">Подать заявку</button>
                            </div>
                      </div>
                </div>                             
              } 
    }
    </div>  
}



@code {
    private IEnumerable<Animal>? animals;
    private IEnumerable<Category>? categories;
    private Category? category;  

    protected override void OnInitialized()
    {
        base.OnInitialized();
        animals = AnimalRepository.GetAnimals();
        category = CategoryRepository.GetCategoryById(1);
    }       

    private void OnFindCurrentId(Animal animal)
    {
        
       
        NavigationManager.NavigateTo($"/formorder/{animal.AnimalId}");

    }

    
}
