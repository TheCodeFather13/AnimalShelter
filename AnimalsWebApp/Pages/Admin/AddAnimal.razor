@page "/addanimal"
@using AnimalShelter;
@using AnimalShelterCore;
@using Microsoft.AspNetCore.Components.Forms
@using UseCases.AnimalUseCase;
@using UseCases.AnimalUseCasesInterfaces;
@using UseCases.CategoriesUseCases;
@using UseCases.UseCasesInterfaces;

@inject NavigationManager NavigationManager
@inject IAddAnimalUseCase AddAnimalUseCase
@inject IGetCategoryByIdUseCase GetCategoryByIdUseCase
@inject IViewCategoriesUseCase ViewCategoriesUseCase
@inject IWebHostEnvironment Environment
@inject ILogger<AddAnimal> Logger

<div class="line"></div>

@if(animal == null)
{
   <SpinnerComponent></SpinnerComponent>
}
else
{
    <p class="text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4">
        <button class="btn btn-danger" @onclick="OnCancel">Назад</button>
    </p>
    <EditForm Model="animal" OnValidSubmit="OnValidSubmit" class="mx-1 mx-md-4" enctype="multipart/form-data">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="container h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-lg-12 col-xl-11">
                    <div class="card text-black" style="border-radius: 25px;">
                        <div class="card-body p-md-5">
                            <div class="row justify-content-center">
                                <div class="col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1">
                                                                                                        
                                    <p class="text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4">Добавить животное</p>

                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <i class="fas fa-user fa-lg me-3 fa-fw"></i>
                                        <div class="form-outline flex-fill mb-0">
                                            <label for="name" class="form-label">Имя: </label>
                                            <InputText id="name" @bind-Value="animal.Name" class="form-control" placeholder="Введите имя"></InputText>
                                        </div>
                                    </div>

                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <i class="fas fa-envelope fa-lg me-3 fa-fw"></i>
                                        <div class="form-outline flex-fill mb-0">
                                            <label for="category">Категория</label>
                                            <select id="category" @bind="animal.CategoryId">
                                                <option value="0">Выберите категорию животного</option>
                                                @foreach (var category in categories)
                                                {
                                                    <option value="@category.CategoryId">@category.Name</option>
                                                }
                                            </select>
                                        </div>
                                    </div>

                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <i class="fas fa-lock fa-lg me-3 fa-fw"></i>
                                        <div class="form-outline flex-fill mb-0">
                                            <label for="age" class="form-label">Возраст</label>
                                            <InputText id="age" @bind-Value="animal.Age" class="form-control"></InputText>
                                        </div>
                                    </div>

                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <i class="fas fa-key fa-lg me-3 fa-fw"></i>
                                        <div class="form-outline flex-fill mb-0">
                                            <label for="gender" class="form-label">Пол</label>
                                            <InputText id="gender" @bind-Value="animal.Gender" class="form-control" placeholder="Male или Female"></InputText>
                                        </div>
                                    </div>

                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <i class="fas fa-key fa-lg me-3 fa-fw"></i>
                                        <div class="form-outline flex-fill mb-0">
                                            <label for="contacts" class="form-label">Контакты</label>
                                            <InputText id="contacts" @bind-Value="animal.Contacts" class="form-control"></InputText>
                                        </div>
                                    </div>

                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <i class="fas fa-key fa-lg me-3 fa-fw"></i>
                                        <div class="form-outline flex-fill mb-0">
                                            <label for="dayOfPublication">День публикации</label>
                                            <input type="date" id="dayOfPublication" @bind="dayOfPublication"></input>
                                        </div>
                                    </div>

                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <i class="fas fa-key fa-lg me-3 fa-fw"></i>
                                        <div class="form-outline flex-fill mb-0">
                                            <label for="imagePath">Вставить фотку</label>
                                           @* <InputFile OnChange="OnFileChange" class="form-label"></InputFile>*@

                                            @if (!string.IsNullOrEmpty(animal.ImagePath))
                                            {
                                                <img src="@animal.ImagePath" class="imgForAnimals" />
                                            }
                                            else
                                            {
                                                foreach (var image in animal.Images)
                                                {
                                                    <img src="@image.Data" class="imgForAnimals" />
                                                }
                                            }

                                            <InputFile id="images" OnChange="OnFileChange" multiple class="form-label"></InputFile>
                                        </div>
                                    </div>


                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <i class="fas fa-key fa-lg me-3 fa-fw"></i>
                                        <button class="btn btn-success" type="submit">Сохранить</button>                                       
                                    </div>  

                                    @if (displayValidationErrorMessages)
                                    {
                                        <div class="col-md-4" style="margin-top:200px">
                                            <label>Ошибка: </label>
                                            <ValidationSummary />
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
    @if (displayUserAddedToDB)
    {
        <div class="row bg-success text-white" style="margin-top:200px; height:40px">
            <label class="p-2">Животное успешно добавлено!</label>
        </div>
    }
}

@code {
    private Animal animal;
    private IEnumerable<Category> categories;
    private DateTime dayOfPublication;

    bool displayValidationErrorMessages = false;
    bool displayUserAddedToDB = false;  


    protected override void OnInitialized()
    {
        base.OnInitialized();
        dayOfPublication = DateTime.UtcNow;
        animal = new Animal();
        categories = ViewCategoriesUseCase.Execute();
    }

    private void OnValidSubmit(EditContext context)
    {
        if(context.Validate())
        {
            AddAnimalUseCase.AddAnimal(animal);
            displayValidationErrorMessages = false;
            displayUserAddedToDB = true;
            NavigationManager.NavigateTo("/admin");
        }
        else
        {
            displayValidationErrorMessages = true;
            displayUserAddedToDB = false;
        }
    }    

    async Task OnFileChange(InputFileChangeEventArgs e)
    {
        //var imageData = $"css/Images/" + e.File.Name;
        //animal.ImagePath = imageData;
        var format = "image/jpg";

        var resizedImage = await e.File.RequestImageFileAsync(format, 250, 250);
        var buffer = new byte[resizedImage.Size];
        await resizedImage.OpenReadStream().ReadAsync(buffer);
        var imageData = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
        animal.ImagePath = imageData;
    }
   

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/admin");
    }
}

